!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
HSVtoRGB	tp/tp2.cpp	/^void HSVtoRGB(int h,int s,int v,vpRGBa &pix)$/;"	f	signature:(int h,int s,int v,vpRGBa &pix)
RGBtoHSV	tp/tp2.cpp	/^void RGBtoHSV( int &h, int &s, int &v , vpRGBa &pix)$/;"	f	signature:( int &h, int &s, int &v , vpRGBa &pix)
RGBtoYUV	tp/tp2.cpp	/^void RGBtoYUV(const vpRGBa &rgb, vpRGBa &yuv) {$/;"	f	signature:(const vpRGBa &rgb, vpRGBa &yuv)
anamorphose1	tp/tp3.cpp	/^void anamorphose1(const vpImage<unsigned char>  &I0, const float pente)$/;"	f	signature:(const vpImage<unsigned char> &I0, const float pente)
anamorphose2	tp/tp3.cpp	/^void anamorphose2(const vpImage<unsigned char>  &I0, const unsigned int seuil)$/;"	f	signature:(const vpImage<unsigned char> &I0, const unsigned int seuil)
compute_stat	tp/tp3.cpp	/^void compute_stat(const vpImage<unsigned char>  &I0, const unsigned int h,const unsigned int w, const int posX, const int posY)$/;"	f	signature:(const vpImage<unsigned char> &I0, const unsigned int h,const unsigned int w, const int posX, const int posY)
corres	tp/tp4.cpp	/^int corres(const vpRGBa &coul, const int * classeR, const int * classeG,const int * classeB,const unsigned int nbClasse) {$/;"	f	signature:(const vpRGBa &coul, const int * classeR, const int * classeG,const int * classeB,const unsigned int nbClasse)
creerPalette	tp/tp4.cpp	/^void creerPalette(const unsigned char* repR,const unsigned char* repG,const unsigned char* repB, const unsigned int nbRep, vpRGBa* pal) {$/;"	f	signature:(const unsigned char* repR,const unsigned char* repG,const unsigned char* repB, const unsigned int nbRep, vpRGBa* pal)
decoupecompo	tp/tp4.cpp	/^void decoupecompo(const vpImage<unsigned char> &compo, unsigned char * correscompo, int n) {$/;"	f	signature:(const vpImage<unsigned char> &compo, unsigned char * correscompo, int n)
dynamique	tp/tp3.cpp	/^void dynamique (const unsigned int* histo, int &min, int &max) {$/;"	f	signature:(const unsigned int* histo, int &min, int &max)
ecart_type	tp/tp3.cpp	/^float  ecart_type (const unsigned int* histo, const unsigned int h, const unsigned int w) {$/;"	f	signature:(const unsigned int* histo, const unsigned int h, const unsigned int w)
egalisation	tp/tp3.cpp	/^void egalisation(const vpImage<unsigned char>  &I)$/;"	f	signature:(const vpImage<unsigned char> &I)
entropie	tp/tp3.cpp	/^double entropie (const unsigned int* histo, const unsigned int h, const unsigned int w)$/;"	f	signature:(const unsigned int* histo, const unsigned int h, const unsigned int w)
histocumule	tp/tp3.cpp	/^void histocumule(const vpImage<unsigned char> &I, unsigned int* histo, unsigned int* histocumul)$/;"	f	signature:(const vpImage<unsigned char> &I, unsigned int* histo, unsigned int* histocumul)
histocumule	tp/tp4.cpp	/^void histocumule(const vpImage<unsigned char> &I, unsigned int* histo, unsigned int* histocumul)$/;"	f	signature:(const vpImage<unsigned char> &I, unsigned int* histo, unsigned int* histocumul)
histogramme	tp/tp3.cpp	/^void histogramme(const vpImage<unsigned char>  &I, unsigned int* histo, int &max)$/;"	f	signature:(const vpImage<unsigned char> &I, unsigned int* histo, int &max)
histogramme	tp/tp4.cpp	/^void histogramme(const vpImage<unsigned char>  &I, unsigned int* histo, int &max)$/;"	f	signature:(const vpImage<unsigned char> &I, unsigned int* histo, int &max)
main	tp/tp0-exemple.cpp	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tp/tp0.cpp	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tp/tp1.cpp	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tp/tp2.cpp	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tp/tp3.cpp	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tp/tp4.cpp	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tp/tp5.cpp	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
moyenne	tp/tp3.cpp	/^float moyenne (const unsigned int* histo, const unsigned int h, const unsigned int w) {$/;"	f	signature:(const unsigned int* histo, const unsigned int h, const unsigned int w)
niveaux_de_gris	tp/tp3.cpp	/^int niveaux_de_gris (const unsigned int* histo) {$/;"	f	signature:(const unsigned int* histo)
putBitInString	tp/tp2.cpp	/^void putBitInString(char chaine[],const bool val,const unsigned int position) {$/;"	f	signature:(char chaine[],const bool val,const unsigned int position)
q11	tp/tp2.cpp	/^void q11() {$/;"	f	signature:()
q12	tp/tp2.cpp	/^void q12() {$/;"	f	signature:()
q22	tp/tp2.cpp	/^void q22() {$/;"	f	signature:()
q3	tp/tp2.cpp	/^void q3() {$/;"	f	signature:()
quantifVectoriel	tp/tp4.cpp	/^void quantifVectoriel(const vpImage<vpRGBa> &imasrc,vpImage<vpRGBa> &imadest, vpRGBa * pal,const int taillePalette) $/;"	f	signature:(const vpImage<vpRGBa> &imasrc,vpImage<vpRGBa> &imadest, vpRGBa * pal,const int taillePalette)
quantifnonuniforme	tp/tp4.cpp	/^void quantifnonuniforme(const vpImage<vpRGBa> &I, int n, unsigned char* R, unsigned char * G, unsigned char* B) {$/;"	f	signature:(const vpImage<vpRGBa> &I, int n, unsigned char* R, unsigned char * G, unsigned char* B)
quantifuniforme	tp/tp4.cpp	/^void quantifuniforme(const vpImage<vpRGBa> &I, int n) {$/;"	f	signature:(const vpImage<vpRGBa> &I, int n)
question2	tp/tp1.cpp	/^void question2()$/;"	f	signature:()
question3	tp/tp1.cpp	/^void question3()$/;"	f	signature:()
question4	tp/tp1.cpp	/^void question4()$/;"	f	signature:()
question5	tp/tp1.cpp	/^void question5()$/;"	f	signature:()
question6	tp/tp1.cpp	/^void question6()$/;"	f	signature:()
question7	tp/tp1.cpp	/^void question7()$/;"	f	signature:()
tracer_histo	tp/tp3.cpp	/^void tracer_histo(const unsigned int *histo, const unsigned int max, const int size, const int posX, const int posY) {$/;"	f	signature:(const unsigned int *histo, const unsigned int max, const int size, const int posX, const int posY)
